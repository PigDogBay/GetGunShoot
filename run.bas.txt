#program run
#autoline 10,10
#; MPD Bailey Technology 23rd Jan 2024
#; Nexions
#; 
#; GLOBAL VARIABLES
#; ----------------
#; 
#; %a - Fire button count, prevent user holding down fire
#; %b - Pattern change counter
#; %c - 
#; %d - 
#; %e - 
#; %f - 
#; %g - 
#; %h - 
#; %i - tmp
#; %j - tmp
#; %k - 
#; %l - 
#; %m - 
#; %n -
#; %o -
#; %p - Player number of boosts available 
#; %q - Player Boost state
#; %r - Zombie State
#; %s - Current State
#; %t - Title state
#; %u - Gun state
#; %v - Gun x Position
#; %w - Zombie x Position
#; %x - Player x position
#; %y - Player y position
#; %z - Player movement direction, 1 right, 9 left
#; score - Current score
#; high - High score
#; timer - Set with TIME
#;
#;
#; GAME STATES
#; -----------
#;
#; 0 sTitle
#; 1 sStart 
#; 2 sGame
#; 3 sDie
#; 
#; Gun states
#; 0 spawn, being dropped in
#; 1 ready to be collected
#; 2 player holding gun
#; 3-19 firing state
#; 20 - end of fired
#; 
#; 
#; 
#; 
#; SPRITES
#; -------
#; 
#; 1-5   Souls
#; 6     Gun 
#; 7-8   Zombie
#; 9-10  Player
#; 20    Shotgun blast
#; 21    Gun Angel
#; 

RUN AT 3
#; Constants for states
sTitle, sStart, sGame, sDie=0,1,2,3: timer=0
PROC initSnd():PROC font(): PROC loadHS() TO high :PROC state(sTitle)

#;-----------------------------
#;
#; State Machine Functions
#;
#;-----------------------------

@g 
ON %s: PROC title(): PROC start(): PROC game(): PROC die(): PROC gameOver()
SPRITE MOVE INT:GO TO @g


#;
#; Enter new state and initialize it
#;
DEFPROC state(newState)
%s = newState
ON %s: PROC initTitle(): PROC initStart(): PROC initGame(): PROC initDie(): PROC initGameOver()
ENDPROC

DEFPROC initTitle()
PROC initGraphics("title.sl2")
DRIVER %49,%2,%2
timer= TIME :tmr2= TIME :%t=0

SPRITE %0,%150,%120,%36,%1,%1
SPRITE -1,%0,%16,%2,%1,%2
SPRITE CONTINUE %0,%80 TO %220 STEP 1 RUN ,%120,%36,%9,%0
%b=0
ENDPROC

DEFPROC title()
%b+=1
IF %b=5 THEN SPRITE CONTINUE %0,,,%37
IF %b=10 THEN SPRITE CONTINUE %0,,,%36:%b=0

IF (TIME-tmr2)>100 THEN PROC help():tmr2=TIME
#; Fire to start game
%i = INPUT 1| INPUT 0
IF %i&$10 THEN PROC state(sStart)
ENDPROC

DEFPROC initStart()
PROC initGraphics("play.sl2")
score=0: PROC score(): PROC hiScore()
SPRITE %120,%16,%144,%4,%1,%0,%0,%1
SPRITE %121,%288,%144,%4,%9,%0,%0,%1
SPRITE CONTINUE %120,,,%4 TO %5,%64,%5
SPRITE CONTINUE %121,,,%4 TO %5,%64,%5
ENDPROC

DEFPROC start()
PROC state(sGame)
ENDPROC

DEFPROC initGame()
#;Player x,y pos, z - dir, w - zombie x, v - gun x
%x,%y,%z,%w,%v=%1276,%144,%1,%320,%480
#; Speed boosts
%p=%3

#; Player Sprite, flags: Update pattern when stationary, bounce between limits, update every 3rd frame
#; Relative flags: 1 - Unified sprite
SPRITE %9,%x>>3,%y,%56,%z,%1
#; Relative flags: 2 - pattern is relative to anchor
SPRITE -10,%0,%16,%2,%1,%2
SPRITE CONTINUE %9,,,%56 TO %57,%$50,%3,%0

#; Place souls
#; SPRITE %1,%32,%y,%26,%1
#; SPRITE CONTINUE %1,,,%26 TO %27,%$50,%4,%0

PROC gunSpawn()
PROC zombieSpawn()
ENDPROC

DEFPROC game()
#; Gun states
#; 0 spawn, being dropped in
#; 1 ready to be collected
#; 2 player holding gun
#; 3-19 firing state
#; 20 - end of fired
IF %u=0: PROC gunFly()
ELSE IF %u=20: SPRITE %9,,,%56: SPRITE CONTINUE %9,,,%56 TO %57:PROC gunSpawn()
ELSE IF %u>2: %u+=1
ENDIF

IF %r=0: PROC zombieFly()
ELSE IF %r=1: PROC zombie()
ELSE IF %r=80: PROC zombieSpawn()
ELSE IF %r>3: %r+=1
ENDIF

PROC player()

#; *** COLLISION DETECTION ***
%i = SPRITE OVER (%9,%1 TO %7,%7) 
IF %i=6: PROC getGun()
#; Only kill player if zombie is active
ELSE IF %i=7 AND (r=1): PROC state(sDie)
ENDIF

#; Check if zombie shot
%i= SPRITE OVER (%20,%7,%7)
IF %i=7 THEN PROC kill()

ENDPROC

DEFPROC initDie()
#; Change player pattern to death throw
SPRITE %9,,,%48
SPRITE CONTINUE %9,,,%48 TO %49,%$40,%10,%0
#; Zombie run off with brain
SPRITE %7,,,%44,%1
SPRITE CONTINUE %7,%40 TO %240 STEP 1 RUN ,%y,%44 TO %45,%8,%10

timer = TIME
LAYER %0: PRINT AT %13,%12;INK 2;"Game Over"
DRIVER %49,%2,%56
IF score > high THEN high=score: DRIVER %49,%2,%7:PROC saveHS(high)
PROC hiScore()
ENDPROC

DEFPROC die()
IF %u=0 THEN PROC gunFly()
#; Wait for 2 seconds
IF (TIME-timer)< 100 THEN ENDPROC 
%i = INPUT 1| INPUT 0
IF %i&$10 THEN PROC state(sTitle)
ENDPROC




DEFPROC gunSpawn()
#; Set gun state %u to spawn, set random x position for the gun
%u=0:%i=%64+ RND 189
#; Gun sprite fly in from right, go to x pos, drop to y pos
SPRITE %6,319,48,%24,%1
SPRITE CONTINUE %6,%i TO 319 STEP -2 RUN ,48 TO %y STEP 4 STOP ,%24,1,%0,%0
#; Gun Angel, fly in front of gun to LHS
SPRITE %21,303,48,%22,%1
SPRITE CONTINUE %21,%0 TO 319 STEP -2 RUN,STOP,%22,%3
ENDPROC

DEFPROC gunFly()
#; Check y position of the flying gun sprite, if dropped to certain level
#; Place the gun and animate it, update gun state %u to ready (to be collected)
%i= SPRITE AT (%6,1)
IF %i < 130 THEN ENDPROC
SPRITE PAUSE %6:SPRITE %6,,%y,%24,%1:SPRITE CONTINUE %6,STOP,STOP,%24 TO %25,%$50,%3,%0
%u=1
ENDPROC

#; Player has walked over the gun
#; Change player sprite to holding the gun
#; Remove the gun sprite
DEFPROC getGun()
#; Remove Gun
SPRITE %6,,,,%0
#; Change player pattern
SPRITE %9,,,%52
SPRITE CONTINUE %9,,,%52 TO %53
#; Update gun state to collected
%u=2
ENDPROC

DEFPROC zombieSpawn()
#; Set zombie state to spawning
%r=0
#; Random x position for zombie
%w=%64+ RND 189
#; Place Zombie
#; Relative flags: 1 - Unified sprite
SPRITE %7,%w,%60,%40,%1,%1
SPRITE -8,%0,%16,%2,%1,%2
#; Drop zombie
SPRITE CONTINUE %7,STOP,%0 TO %y STEP 1 RUN,%40,%0,%0,%10 + RND 50
#; Multiply x position by 8 for sub-pixel positioning
%w=%w<<3
ENDPROC

DEFPROC zombieFly()
#; Check y position of the spawning zombie sprite, if dropped to certain level
#; stop moving and start chasing the player
%i= SPRITE AT (%7,1)
IF %i < 130 THEN ENDPROC
SPRITE %7,%w>>3,%y,%36,%1:SPRITE CONTINUE %7,,STOP,%36 TO %37,%$58,%3,%0
%r=1
ENDPROC

DEFPROC zombie()
#; Mirror flag so zombie faces the right direction
%i=1
#; Zombie speed, charge if player has the gun
IF %u=2 THEN %j=18: ELSE %j=9
#; Logic to determine quickest path to player, eg go thru a portal 
IF %w > x : IF %w>(x+1280) THEN %w+=%j: ELSE %w-=%j:%i=%9
ELSE IF %x<(w+1280):%w+=%j
ELSE %w-=%j:%i=%9
ENDIF
#; Portal check - warp to other side of the screen
IF %w<104 THEN %w=%2304
IF %w > 2304 THEN %w=%104
SPRITE %7,%w>>3,%y,,%i
ENDPROC


DEFPROC kill()
#; Change zombie pattern
SPRITE %7,,,%32
SPRITE CONTINUE %7,,,%32 TO %33
%r=4
ENDPROC


DEFPROC player()
%i= INPUT 1| INPUT 0
#; Update x position of player and direction they are facing
#; Apply any speed boost to the player
IF %i&1 THEN %x+=%8+q:%z=1
IF %i&2 THEN %x-=%8+q:%z=9
IF %q > 0 THEN %q-=%1
#; Prevent user holding down the fire button, %a - button press down counts
#; Only fire when %a=1, resets to 0 when player releases the fire button
IF %i&$10 THEN %a+=1 : ELSE %a=0
IF %a=1:%a+=%1
#; Can only fire if you have the gun and has not already been fired(%u gun state)
#; If not holding the gun then apply a speed boost to the player
IF %u=2 THEN PROC fire() : ELSE PROC boost()
ENDIF

#; X-Pos bounds check, warp to otherside of screen
IF %x<104 THEN %x=%2304
IF %x > 2304 THEN %x=%104
SPRITE %9,%x >> 3,%y,,%z
ENDPROC

#; %q Speed boost counter
#; %p Number of speed boosts available to the player 
DEFPROC boost()
IF %q=0 AND (p>0) THEN %q=20:%p-=%1
ENDPROC

#; 
#; *** PLAYER FIRE ***
#; 
DEFPROC fire()
#; Set gun state to fired
%u=%3
%i= %x>>3
IF %z=1:
#;  Shoot right
%j=%i+8:IF %j>319 THEN %j=319
SPRITE %20,%j,%y+8,%0,%1
#; Flags %3 - stop and become invisible
%j=%i+40:IF %j>319 THEN %j=319
SPRITE CONTINUE %20,%0 TO %j STEP 4 RUN ,%y+8,%0 TO %3,%3
ELSE
#;  Shoot Left
%j=%i-8:IF %j>319 THEN %j=0
SPRITE %20,%j,%y+8,%0,%1
#; Flags %3 - stop and become invisible
%j=%i-40:IF %j>319 THEN %j=0
SPRITE CONTINUE %20,%j TO 319 STEP -4 RUN ,%y+8,%0 TO %3,%3
ENDIF
ENDPROC 

#; 
#; *** INITIALIZE GRAPHICS ***
#; 
#; Set up Layers and Sprites and load in the screen name to layer 2
DEFPROC initGraphics(scrName$)
#; Layers
LAYER 0: BORDER 0: PAPER 0: INK 7: CLS :LAYER CLEAR: LAYER OVER 6
LAYER 2,1: LAYER ERASE 0,0,256,192

#; Sprites
BANK NEW bankId
LOAD "GetGunShoot.spr" BANK bankId
SPRITE CLEAR : SPRITE BANK bankId:BANK bankId CLEAR
SPRITE PRINT 1: SPRITE BORDER 1: SPRITE STOP

#; Load Layer 2 screen
LAYER 2,1: LOAD scrName$ LAYER: LAYER 0

ENDPROC 

#; Set up AY sound driver and load sound effects
#; If driver is already installed, will throw an error
#; So this code will catch and ignore the error
DEFPROC initSnd()
    ON ERROR ENDPROC  
    .install "ayfx.drv"
    BANK NEW %i
    LOAD "sfx.afb" BANK %i
    DRIVER 49,1,%i
ENDPROC

DEFPROC help()
LAYER 0
PRINT AT 20,4;"                       "
IF %t=0 : PRINT AT 20,10;INK 4;"Avoid Zombie"
ELSE IF %t=1 : PRINT AT 20,12;INK 3;"Get Gun"
ELSE IF %t=2 : PRINT AT 20,10;INK 5;"Shoot Zombie"
ELSE IF %t=3 : PRINT AT 20,9;INK 2;"Free The Souls"
ELSE IF %t=4 : PRINT AT 20,9;INK 6;"Hi Score ";high
ELSE IF %t=5 : PRINT AT 20,10;INK 5;"Fire To Start"
ELSE: PRINT AT 20,9;INK 3;"By Pig Dog Bay"
ENDIF
%t+=1:IF %t=7 THEN %t=0
ENDPROC

#; 
#; *** SCORE ***
#; 
DEFPROC score()
LAYER %0: PRINT AT %0,%0;INK 2;score
ENDPROC 
DEFPROC hiScore()
LAYER %0: PRINT AT %0,%14;INK 2;high
ENDPROC 

DEFPROC loadHS()
LOCAL h()
ON ERROR ENDPROC =10000
LOAD "hs.bin" DATA h()
ENDPROC =h(1)

DEFPROC saveHS(hi)
LOCAL h() : DIM h(1) : h(1)= hi
ON ERROR ENDPROC
SAVE "hs.bin" DATA h()
ENDPROC

#; 
#; *** DEBUG PRINT ***
#; 
DEFPROC dbg(%i)
LAYER %0: PRINT AT %21,%0;%i;"    ":LAYER %2,%1
ENDPROC

DEFPROC font()
LOAD "BloodRain.ch8" CODE %$FA00,768
POKE 23607,%$F9: POKE 23606,0:PRINT CHR$ 2
ENDPROC

#autoline