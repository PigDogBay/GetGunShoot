#program run
#autoline 10,10
#; MPD Bailey Technology 23rd Jan 2024
#; Nexions
#; 
#; GLOBAL VARIABLES
#; ----------------
#; 
#; %a - 
#; %b - 
#; %c - 
#; %d - 
#; %e - 
#; %f - 
#; %g - 
#; %h - 
#; %i - tmp
#; %j - tmp
#; %k - 
#; %l - 
#; %m - 
#; %n -
#; %o -
#; %p -
#; %q -
#; %r -
#; %s - Current State
#; %t - 
#; %u -
#; %v - Gun x Position
#; %w - Zombie x Position
#; %x - Player x position
#; %y - Player y position
#; %z - Player movement direction, 1 right, 9 left
#; score - Current score
#; high - High score
#; timer - Set with TIME
#;
#;
#; GAME STATES
#; -----------
#;
#; 0 sTitle
#; 1 sStart 
#; 2 sLevel
#; 3 sChase
#; 4 sShoot
#; 5 sDie
#; 6 sGameOver
#; 
#; 
#; 
#; 
#; 
#; SPRITES
#; -------
#; 
#; 

RUN AT 3
#; Constants for states
sTitle, sStart, sLevel, sChase, sFlee, sDie, sGameOver=0,1,2,3,4,5,6: timer=0
PROC initSnd():PROC initSprites():PROC font(): PROC loadHS() TO high :PROC state(sTitle)

#;-----------------------------
#;
#; State Machine Functions
#;
#;-----------------------------

@g 
ON %s: PROC title(): PROC start(): PROC level(): PROC chase(): PROC flee(): PROC die(): PROC gameOver()
SPRITE MOVE INT:GO TO @g


#;
#; Enter new state and initialize it
#;
DEFPROC state(newState)
%s = newState
ON %s: PROC initTitle(): PROC initStart(): PROC initLevel(): PROC initChase(): PROC initFlee(): PROC initDie(): PROC initGameOver()
ENDPROC

DEFPROC initTitle()
LAYER 0: BORDER 0: PAPER 0: INK 7: CLS : LAYER CLEAR : LAYER OVER 6
LAYER 2,1: LAYER ERASE 0,0,256,192

LAYER 2,1: LOAD "title.sl2" LAYER
DRIVER %49,%2,%2
timer= TIME :tmr2= TIME:%t=0
ENDPROC

DEFPROC title()
IF (TIME-tmr2)>100 THEN PROC help():tmr2=TIME
#; Fire to start game
%i = INPUT 1| INPUT 0
IF %i&$10 THEN PROC state(sStart)
ENDPROC

DEFPROC initStart()
LAYER 0: BORDER 0: PAPER 0: INK 7: CLS : LAYER OVER 6
LAYER 2,1: PAPER 0: LAYER ERASE 0,0,256,192:CLS: LAYER 0
score=0:PROC score():PROC hiScore()
ENDPROC

DEFPROC start()
PROC state(sLevel)
ENDPROC

DEFPROC initLevel()
%x,%y,%z,%w,%v=%1276,%128,%1,%320,%480
#; Player Sprite, flags: Update pattern when stationary, bounce between limits, update every 3rd frame
SPRITE %0,%x>>3,%y,%0,%z
SPRITE CONTINUE %0,,,%0 TO %1,%$50,%3,%0

#; Place souls
SPRITE %10,%32,%y,%8,%1
SPRITE CONTINUE %10,,,%8 TO %10,%$50,%3,%0
SPRITE %11,%96,%y,%8,%1
SPRITE CONTINUE %11,,,%8 TO %10,%$50,%3,%0
SPRITE %12,%288,%y,%8,%1
SPRITE CONTINUE %12,,,%8 TO %10,%$50,%3,%0
SPRITE %13,%248,%y,%8,%1
SPRITE CONTINUE %13,,,%8 TO %10,%$50,%3,%0
SPRITE %14,%224,%y,%8,%1
SPRITE CONTINUE %14,,,%8 TO %10,%$50,%3,%0

#; Place Gun
SPRITE %8,%v>>3,%y,%24,%1


#; Place Zombie
SPRITE %9,%w>>3,%y,%8,%1
SPRITE CONTINUE %9,,,%16 TO %17,%$58,%3,%10
ENDPROC

DEFPROC level()
PROC state(sChase)
ENDPROC

DEFPROC initChase()
ENDPROC

DEFPROC chase()
PROC player()
PROC zombie()
#; *** COLLISION DETECTION ***
%i = SPRITE OVER (%0,%8 TO %14,%7) 
IF %i=8: PROC state(sFlee)
ELSE IF %i=9: PROC state(sDie)
ENDIF
ENDPROC

DEFPROC initFlee()
#; Remove Gun
SPRITE %8,,,,%0
#; Change player pattern
SPRITE %0,,,%4,%z
SPRITE CONTINUE %0,,,%4 TO %5,%$50,%3,%0

ENDPROC

DEFPROC flee ()
PROC player()
PROC zomFlee()
ENDPROC

DEFPROC initDie()
#; Change player pattern
SPRITE %0,,,%40
SPRITE CONTINUE %0,,,%40 TO %41,%$40,%10,%0
#; Remove Zombie
SPRITE %9,,,,%0
timer = TIME
LAYER %0: PRINT AT %10,%12;INK 2;"Game Over"
DRIVER %49,%2,%56
IF score > high THEN high=score: DRIVER %49,%2,%7:PROC saveHS(high)
PROC hiScore()
ENDPROC

DEFPROC die()
#; Wait for 2 seconds
IF (TIME-timer)< 100 THEN ENDPROC 
%i = INPUT 1| INPUT 0
IF %i&$10 THEN PROC state(sTitle)

ENDPROC

#; 
#; *** ENTER STATE: GAME OVER  ***
#; 
DEFPROC initGameOver()
timer = TIME
LAYER %0: PRINT AT %10,%12;"Game Over"
DRIVER %49,%2,%56
IF score > high THEN high=score: DRIVER %49,%2,%7:PROC saveHS(high)
PROC hiScore()
ENDPROC
#; 
#; *** STATE: GAME OVER  ***
#; 
DEFPROC gameOver()
PROC display()
#; Wait for 2 seconds
IF (TIME-timer)< 100 THEN ENDPROC 
%i = INPUT 1| INPUT 0
IF %i&$10 THEN PROC state(sTitle)
ENDPROC


#;-----------------------------
#;
#; Utility Functions
#; Do NOT change state in these
#;
#;-----------------------------


#; 
#; *** INITIALIZE GRAPHICS ***
#; 
#; Set up Layers and Sprites
DEFPROC initSprites()

#; Layers
#;LAYER 0: BORDER 0: PAPER 0: INK 7: CLS :LAYER CLEAR: rem LAYER OVER 6
#; LAYER 2,1: LAYER ERASE 0,0,256,192

#; Sprites
BANK NEW bankId
LOAD "GetGunShoot.spr" BANK bankId
SPRITE CLEAR : SPRITE BANK bankId:BANK bankId CLEAR
SPRITE PRINT 1: SPRITE BORDER 1: SPRITE STOP 

ENDPROC 

#; Set up AY sound driver and load sound effects
#; If driver is already installed, will throw an error
#; So this code will catch and ignore the error
DEFPROC initSnd()
    ON ERROR ENDPROC  
    .install "ayfx.drv"
    BANK NEW %i
    LOAD "sfx.afb" BANK %i
    DRIVER 49,1,%i
ENDPROC

#; 
#; *** HANDLE INPUT ***
#; 
DEFPROC player()
%i= INPUT 1| INPUT 0
#; Update x position of player and direction they are facing
IF %i&1 THEN %x+=%8:%z=1
IF %i&2 THEN %x-=%8:%z=9
IF %i&$10 THEN PROC fire()
#; X-Pos bounds check, warp to otherside of screen
IF %x<32 THEN %x=%2488
IF %x > 2488 THEN %x=%32
SPRITE %0,%x>>3,%y,,%z
ENDPROC 

DEFPROC zombie()
#; Mirror flag so zombie faces the right direction
%i=1
#; Logic to determine quickest path to player, eg go thru a portal 
IF %w > x : IF %w>(x+1280) THEN %w+=%9: ELSE %w-=%9:%i=%9
ELSE IF %x<(w+1280):%w+=%9
ELSE %w-=%9:%i=%9
ENDIF
#; Portal check - warp to other side of the screen
IF %w<32 THEN %w=%2488
IF %w > 2488 THEN %w=%32
SPRITE %9,%w>>3,%y,,%i
ENDPROC

DEFPROC zomFlee()
#; Mirror flag so zombie faces the right direction
%i=9
#; Logic to determine quickest path to player, eg go thru a portal 
IF %w > x : IF %w>(x+1280) THEN %w-=%4: ELSE %w+=%4:%i=%1
ELSE IF %x<(w+1280):%w-=%4
ELSE %w+=%4:%i=%1
ENDIF
#; Portal check - warp to other side of the screen
IF %w<32 THEN %w=%2488
IF %w > 2488 THEN %w=%32
SPRITE %9,%w>>3,%y,,%i
ENDPROC

#; 
#; *** UPDATE SCORE ***
#; 
DEFPROC score()
LAYER %0: PRINT AT %0,%0;INK 2;score
ENDPROC 
DEFPROC hiScore()
LAYER %0: PRINT AT %0,%14;INK 2;high
ENDPROC 



#; 
#; *** ANIMATE ENEMY SPRITES ***
#;
#; Cannot use SPRITE CONTINUE to automate the pattern change
#; as it is been updated to quickly, (set a rate will slow movement)
#; So need manually change the pattern every 10 calls
#;
DEFPROC anim() 
%b+=1: IF (%b<>10) AND (%b<>20) THEN ENDPROC
%j=%d
#;Animate mothersip and spider
SPRITE CONTINUE %10,,,%46:SPRITE CONTINUE %20,,,%38
IF %b=20 THEN %j+=1:%b=0: SPRITE CONTINUE %10,,,%47: SPRITE CONTINUE %20,,,%39
#;Animate enemies
FOR %i=%11 TO %19
SPRITE CONTINUE %i,,,%j
NEXT %i
ENDPROC


#; 
#; *** PLAYER FIRE ***
#; 
DEFPROC fire()
ENDPROC 


#; 
#; *** DESTROY ENEMY ***
#; 
DEFPROC destroyEnemy(%s,%b)
PROC kill(%s,%21):SPRITE %b,%0,%0,%0,%0
#;Spider bomb, set %f=0 to disable counter
IF %s=20: score+=500: %f=0:DRIVER %49,%2,%1
#;Mothership 
ELSE IF %s=10:score+=250: DRIVER %49,%2,%1
#;Decrease normal enemy count
ELSE:%c-=%1:score+=50
ENDIF
PROC score()
ENDPROC


#; 
#; *** CLEAR ENEMIES ***
#; 
DEFPROC clearEnemies()
FOR %i=%10 TO %19
SPRITE %i,%0,%0,%0,%0: SPRITE %i+10,%0,%0,%0,%0
NEXT %i
ENDPROC




DEFPROC kill(%s,%m)
#; Get x,y co-ords
%i = SPRITE AT (%s,%0) : %j=SPRITE AT (%s,%1)
#;Show explosion patterns
#;Patterns 51 to 53
#;Flags Disable when reach limit and update when stationary
#;Rate every 10 calls, delay 0
SPRITE %s,%0,%0,%0,%0:SPRITE %54,%i,%j,%51,%1:SPRITE CONTINUE %54,,,%51 TO %53,$60,%3,%0
DRIVER %49,%2,%m:PROC bang(%i,%j)
ENDPROC

#;
#; Defender style explosion for enemies
#;
DEFPROC bang(%x,%y)
SPRITE 50,%x,%y,%43,%1
SPRITE 51,%x,%y,%43,%1
SPRITE 52,%x,%y,%43,%1
SPRITE 53,%x,%y,%43,%1
%j=%1+ RND 10
%k=%10-j
SPRITE CONTINUE %50,%0 TO %x  STEP %SGN{-j} RUN, %0 TO %y STEP %SGN{-k} RUN, %43,%3
%j=%1+ RND 10
%k=%10 - j
SPRITE CONTINUE %51,%x TO %256 STEP %j RUN, %y TO %192 STEP %k RUN, %43,%3
%j=%1+ RND 10
%k=%10 - j
SPRITE CONTINUE %52,%x TO %256 STEP %j RUN, %0 TO %y STEP %SGN{-k} RUN, %43,%3
%j=%1+ RND 10
%k=%10 - j
SPRITE CONTINUE %53,%0 TO %x STEP % SGN {-j} RUN ,%y TO %192 STEP %k RUN ,%43,%3
ENDPROC

DEFPROC star()
IF TIME -timer < 2 THEN ENDPROC
timer=TIME
%j=% RND (20)-10:%k=% RND (20)-10
IF %(j=0) AND (k=0) THEN ENDPROC
%h=%40+RND(5)
SPRITE %z,%143+RND(20),%118+RND(20),%h,%1
SPRITE CONTINUE %z,%0 TO %319 STEP % SGN {j} RUN ,%0 TO %255 STEP % SGN {k} RUN ,%h,%3
%z+=1:IF %z=120 THEN %z=80
ENDPROC

DEFPROC help()
LAYER 0
PRINT AT 20,4;"                       "
IF %t=0 : PRINT AT 20,10;INK 4;"Avoid Zombie"
ELSE IF %t=1 : PRINT AT 20,12;INK 3;"Get Gun"
ELSE IF %t=2 : PRINT AT 20,10;INK 5;"Shoot Zombie"
ELSE IF %t=3 : PRINT AT 20,9;INK 2;"Free The Souls"
ELSE IF %t=4 : PRINT AT 20,9;INK 6;"Hi Score ";high
ELSE IF %t=5 : PRINT AT 20,10;INK 5;"Fire To Start"
ELSE: PRINT AT 20,9;INK 3;"By Pig Dog Bay"
ENDIF
%t+=1:IF %t=7 THEN %t=0
ENDPROC


#;
#; High Score Load/Save
#;
DEFPROC loadHS()
LOCAL h()
ON ERROR ENDPROC =10000
LOAD "hs.bin" DATA h()
ENDPROC =h(1)

DEFPROC saveHS(hi)
LOCAL h() : DIM h(1) : h(1)= hi
ON ERROR ENDPROC
SAVE "hs.bin" DATA h()
ENDPROC

#; 
#; *** DEBUG PRINT ***
#; 
DEFPROC dbg(%i)
LAYER %0: PRINT AT %21,%0;%i;"    ":LAYER %2,%1
ENDPROC

DEFPROC font()
LOAD "BloodRain.ch8" CODE %$FA00,768
POKE 23607,%$F9: POKE 23606,0:PRINT CHR$ 2
ENDPROC

#autoline